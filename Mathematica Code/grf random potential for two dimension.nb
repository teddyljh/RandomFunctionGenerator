(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     92033,       1895]
NotebookOptionsPosition[     91526,       1874]
NotebookOutlinePosition[     91882,       1890]
CellTagsIndexPosition[     91839,       1887]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"1.", "grf", " ", "comstructiom"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"distribution", "=", 
     RowBox[{"TransformedDistribution", "[", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"0", "*", "I", " ", "t"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "\[Distributed]", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"0", " ", ",", "1"}], "]"}]}], ",", 
         RowBox[{"t", "\[Distributed]", 
          RowBox[{"UniformDistribution", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", " ", "Pi"}]}], "}"}], "]"}]}]}], "}"}]}], "]"}]}], 
    ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"grfreset", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"inpoints", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"inval", "=", 
         RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"corr", "[", "x_", "]"}], "=", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"grf", "[", 
      RowBox[{"newpoint_", ",", "lh2_", ",", "lv2_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "val", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dim", "=", 
         RowBox[{"Length", "[", "newpoint", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lh", "=", "lh2"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"Horizontal", " ", "scale"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"lv", "=", "lv2"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"Vertical", " ", "scale"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"val", "=", 
         RowBox[{"lv", "*", 
          RowBox[{"evaluateat", "[", 
           RowBox[{"newpoint", "*", 
            RowBox[{"1", "/", "lh"}]}], "]"}]}]}], ";", "val"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"evaluateat", "[", "newpoint_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"len", ",", "val", ",", "check"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"len", "=", 
           RowBox[{"Length", "[", "inpoints", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"len", "\[Equal]", "0"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"inpoints", "=", 
               RowBox[{"{", "newpoint", "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"val", "=", 
               RowBox[{"RandomVariate", "[", "distribution", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"inval", "=", 
               RowBox[{"{", "val", "}"}]}], ";"}], "}"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"check", "=", 
               RowBox[{"Position", "[", 
                RowBox[{"inpoints", ",", "newpoint"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "check", "]"}], "\[Equal]", "0"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"val", "=", 
                  RowBox[{"grfadd", "[", "newpoint", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"checkit", "\[Equal]", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"inval", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"inval", ",", "val"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"inpoints", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"inpoints", ",", "newpoint"}], "]"}]}], ";"}], 
                    "}"}]}], "\[IndentingNewLine]", "]"}], ";"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"val", "=", 
                   RowBox[{"inval", "[", 
                    RowBox[{"[", 
                    RowBox[{"check", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], 
                  ";"}], "}"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "val"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"grfadd", "[", "newpoint_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "len", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "inpoints", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"c0", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"normm", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{"Transpose", "[", "inpoints", "]"}], "-", 
                "newpoint"}], "]"}], "]"}], "^", "2"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"boole", "=", 
         RowBox[{"Boole", "[", 
          RowBox[{"Negative", "[", 
           RowBox[{"normm", "-", "5"}], "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "selects", " ", "all", " ", "points", " ", "from", " ", "inpoints", 
          " ", "that", " ", "are", " ", "within", " ", "5", " ", 
          "correlation", " ", "lengths", " ", "of", " ", "the", " ", 
          "newpoint"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"sel", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"boole", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sellen", "=", 
         RowBox[{"Length", "[", "sel", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sellen", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"RandomVariate", "[", "distribution", "]"}]}], "}"}], ",",
           "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"invalsel", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"inval", "[", 
                RowBox[{"[", "ii", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "sel"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"inpointssel", "=", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"inpoints", "[", 
                RowBox[{"[", "ii", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "sel"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"m3", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", "sellen", "}"}], ",", 
               RowBox[{"{", "sellen", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"inplast", "=", 
                 RowBox[{"inpointssel", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], " ", ";", 
                "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{"normm2", "=", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"Total", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"inpointssel", ",", "i"}], "]"}], "]"}], "-", 
                    "inplast"}], "]"}], "]"}], "^", "2"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{"normm2", "=", 
                 RowBox[{"Take", "[", 
                  RowBox[{"normm2", ",", 
                   RowBox[{"i", "-", "1"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{
                 RowBox[{"m3", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"i", "-", "1"}]}]}], "]"}], "]"}], "=", 
                 "normm2"}], ";", "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{
                 RowBox[{"m3", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"1", ";;", 
                    RowBox[{"i", "-", "1"}]}], ",", "i"}], "]"}], "]"}], "=", 
                 "normm2"}], ";"}], "\[IndentingNewLine]", "\t\t\t", "}"}], 
              "\[IndentingNewLine]", "\t\t", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "sellen"}], "}"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"csel", "=", 
             RowBox[{"corr", "[", "m3", "]"}]}], ";", "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{"cjsel", "=", 
             RowBox[{"corr", "[", 
              RowBox[{"normm", "[", 
               RowBox[{"[", "sel", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"fasel", "=", 
             RowBox[{"Quiet", "[", 
              RowBox[{"LinearSolve", "[", 
               RowBox[{"csel", ",", "cjsel"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"fa22sel", "=", 
             RowBox[{"1", "-", 
              RowBox[{"cjsel", ".", "fasel"}]}]}], ";", "\[IndentingNewLine]",
             "\t\t", 
            RowBox[{"fa2sel", "=", 
             RowBox[{"Sqrt", "[", "fa22sel", "]"}]}], ";", "\t\t", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"pre", "=", 
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{"csel", ".", "fasel"}], "-", "cjsel"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"Or", "[", 
               RowBox[{
                RowBox[{"pre", ">", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "12"}]}]}], ",", 
                RowBox[{
                 RowBox[{"fa22sel", "/", 
                  RowBox[{"Norm", "[", "fasel", "]"}]}], "<", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "6"}]}]}]}], "]"}], ",", "\[IndentingNewLine]",
               "\t\t", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"checkit", "=", "1"}], ";", "\[IndentingNewLine]", 
                "\t\t\t", 
                RowBox[{"fa2sel", "=", "0"}], ";"}], "}"}], ",", 
              RowBox[{"checkit", "=", "0"}]}], "\[IndentingNewLine]", "\t\t", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"a", "=", 
             RowBox[{
              RowBox[{"fa2sel", "*", 
               RowBox[{"RandomVariate", "[", "distribution", "]"}]}], "+", 
              RowBox[{"fasel", ".", "invalsel"}]}]}], ";"}], 
           "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "a"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6327518678263297`*^9, 3.6327519292704163`*^9}, {
  3.632751964584466*^9, 3.6327520328725624`*^9}, {3.6327557291617675`*^9, 
  3.632755734271775*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2.", "inflation", " ", "parameter", " ", "set"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CurlyPhi]step", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"amp", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "15"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CurlyPhi]max", "=", "30"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CurlyPhi]start", "=", 
     RowBox[{"\[CurlyPhi]max", "-", "\[CurlyPhi]step"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]t", "=", 
     SuperscriptBox["10", "5"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"steps", "=", "500"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]", ":=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", 
        RowBox[{"1", "/", 
         SqrtBox["\[CapitalDelta]t"]}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"V0", "[", 
      RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox["m", "2"], 
      SuperscriptBox["x1", "2"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VR", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "steps"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VR1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "steps"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VR2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "steps"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VTOTAL", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "steps"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"H", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "steps"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.632752127544696*^9, 3.632752139077712*^9}, {
   3.632752240987856*^9, 3.6327522417578573`*^9}, {3.6327524523631535`*^9, 
   3.6327524803571925`*^9}, {3.6327525640863104`*^9, 
   3.6327525806383333`*^9}, {3.632752692813492*^9, 3.632752730968545*^9}, {
   3.632753142874125*^9, 3.632753172888168*^9}, {3.632753362368435*^9, 
   3.632753411204503*^9}, {3.6327534509485593`*^9, 3.632753459709572*^9}, {
   3.6327550087687535`*^9, 3.632755043732803*^9}, {3.632755633831633*^9, 
   3.6327556397816415`*^9}, {3.632755754313803*^9, 3.6327558127718854`*^9}, {
   3.63275651058994*^9, 3.632756511109941*^9}, 3.632756606151075*^9, {
   3.6327566572061462`*^9, 3.6327566581761475`*^9}, {3.632756756818287*^9, 
   3.632756757458288*^9}, {3.6327569255695243`*^9, 3.632756926579526*^9}, {
   3.63275703627168*^9, 3.63275706450572*^9}, {3.6327570961597643`*^9, 
   3.6327570962997646`*^9}, {3.6327573314970965`*^9, 3.632757333337099*^9}, {
   3.6327573692421494`*^9, 3.63275736954315*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"3.", "inflation", " ", "trajectory"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CurlyPhi]1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "steps"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CurlyPhi]2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "steps"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CurlyPhi]1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "\[CurlyPhi]start"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CurlyPhi]2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{"\[CurlyPhi]max", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"grfreset", "[", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VR", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{"grf", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CurlyPhi]1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"\[CurlyPhi]2", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\[CurlyPhi]step", 
       ",", "amp"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plus1", ",", "plus2"}], "}"}], ",", 
      RowBox[{
       RowBox[{"plus1", "=", 
        RowBox[{"grf", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CurlyPhi]1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", "\[CurlyPhi]step"}], ",", 
            RowBox[{"\[CurlyPhi]2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\[CurlyPhi]step", 
          ",", "amp"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"plus2", "=", 
        RowBox[{"grf", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CurlyPhi]1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"\[CurlyPhi]2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", "\[CurlyPhi]step"}]}], 
           "}"}], ",", "\[CurlyPhi]step", ",", "amp"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VR1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         FractionBox[
          RowBox[{"plus1", "-", 
           RowBox[{"VR", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "\[CurlyPhi]step"], "+", 
         RowBox[{
          SuperscriptBox["m", "2"], " ", 
          RowBox[{"VR", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"VR2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        FractionBox[
         RowBox[{"plus2", "-", 
          RowBox[{"VR", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "\[CurlyPhi]step"]}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VTOTAL", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"VR", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "+", 
      RowBox[{"V0", "[", 
       RowBox[{
        RowBox[{"\[CurlyPhi]1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"\[CurlyPhi]2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     SqrtBox[
      RowBox[{
       RowBox[{"VTOTAL", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/", "3"}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CurlyPhi]1", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"\[CurlyPhi]1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       FractionBox["\[CapitalDelta]t", 
        RowBox[{"3", " ", 
         RowBox[{"H", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{"VR1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CurlyPhi]2", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"\[CurlyPhi]2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       FractionBox["\[CapitalDelta]t", 
        RowBox[{"3", " ", 
         RowBox[{"H", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]], 
       RowBox[{"(", 
        RowBox[{"VR2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VR", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "=", 
     RowBox[{"grf", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CurlyPhi]1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"\[CurlyPhi]2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[CurlyPhi]step", 
       ",", "amp"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plus1", ",", "plus2"}], "}"}], ",", 
      RowBox[{
       RowBox[{"plus1", "=", 
        RowBox[{"grf", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CurlyPhi]1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "\[CurlyPhi]step"}], ",", 
            RowBox[{"\[CurlyPhi]2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[CurlyPhi]step", 
          ",", "amp"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"plus2", "=", 
        RowBox[{"grf", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CurlyPhi]1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"\[CurlyPhi]2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", "\[CurlyPhi]step"}]}], 
           "}"}], ",", "\[CurlyPhi]step", ",", "amp"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VR1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{
         FractionBox[
          RowBox[{"plus1", "-", 
           RowBox[{"VR", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "\[CurlyPhi]step"], "+", 
         RowBox[{
          SuperscriptBox["m", "2"], " ", 
          RowBox[{"VR", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"VR2", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        FractionBox[
         RowBox[{"plus2", "-", 
          RowBox[{"VR", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[CurlyPhi]step"]}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VTOTAL", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"VR", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "+", 
      RowBox[{"V0", "[", 
       RowBox[{
        RowBox[{"\[CurlyPhi]1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"\[CurlyPhi]2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "=", 
     SqrtBox[
      RowBox[{
       RowBox[{"VTOTAL", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/", "3"}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "2"}], ",", 
      RowBox[{"i", "<", "steps"}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CurlyPhi]1", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["2", 
               SuperscriptBox["\[CapitalDelta]t", "2"]], "+", 
              FractionBox[
               RowBox[{"3", 
                RowBox[{"H", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "\[CapitalDelta]t"]}], 
             ")"}], 
            RowBox[{"\[CurlyPhi]1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "-", 
           FractionBox[
            RowBox[{"\[CurlyPhi]1", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}], 
            SuperscriptBox["\[CapitalDelta]t", "2"]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{"H", "[", 
               RowBox[{"[", "i", "]"}], "]"}], 
              RowBox[{"5", "/", "2"}]], " ", "\[Eta]"}], 
            RowBox[{"2", "\[Pi]"}]], "-", 
           RowBox[{"VR1", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalDelta]t", "2"]], "+", 
           FractionBox[
            RowBox[{"3", 
             RowBox[{"H", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "\[CapitalDelta]t"]}], 
          ")"}]}]}], ";", 
       RowBox[{
        RowBox[{"\[CurlyPhi]2", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["2", 
               SuperscriptBox["\[CapitalDelta]t", "2"]], "+", 
              FractionBox[
               RowBox[{"3", 
                RowBox[{"H", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "\[CapitalDelta]t"]}], 
             ")"}], 
            RowBox[{"\[CurlyPhi]2", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "-", 
           FractionBox[
            RowBox[{"\[CurlyPhi]2", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}], 
            SuperscriptBox["\[CapitalDelta]t", "2"]], "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox[
              RowBox[{"H", "[", 
               RowBox[{"[", "i", "]"}], "]"}], 
              RowBox[{"5", "/", "2"}]], " ", "\[Eta]"}], 
            RowBox[{"2", "\[Pi]"}]], "-", 
           RowBox[{"VR2", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["\[CapitalDelta]t", "2"]], "+", 
           FractionBox[
            RowBox[{"3", 
             RowBox[{"H", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "\[CapitalDelta]t"]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VR", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
        RowBox[{"grf", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[CurlyPhi]1", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
            RowBox[{"\[CurlyPhi]2", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
          "\[CurlyPhi]step", ",", "amp"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"plus1", ",", "plus2"}], "}"}], ",", 
         RowBox[{
          RowBox[{"plus1", "=", 
           RowBox[{"grf", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"\[CurlyPhi]1", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                "\[CurlyPhi]step"}], ",", 
               RowBox[{"\[CurlyPhi]2", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
             "\[CurlyPhi]step", ",", "amp"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"plus2", "=", 
           RowBox[{"grf", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[CurlyPhi]1", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"\[CurlyPhi]2", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
                "\[CurlyPhi]step"}]}], "}"}], ",", "\[CurlyPhi]step", ",", 
             "amp"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"VR1", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
           RowBox[{
            FractionBox[
             RowBox[{"plus1", "-", 
              RowBox[{"VR", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "\[CurlyPhi]step"], 
            "+", 
            RowBox[{
             SuperscriptBox["m", "2"], " ", 
             RowBox[{"\[CurlyPhi]1", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}]}]}], ";", 
          RowBox[{
           RowBox[{"VR2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
           FractionBox[
            RowBox[{"plus2", "-", 
             RowBox[{"VR", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}], 
            "\[CurlyPhi]step"]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VTOTAL", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"VR", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "+", 
         RowBox[{"V0", "[", 
          RowBox[{
           RowBox[{"\[CurlyPhi]1", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
           RowBox[{"\[CurlyPhi]2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", 
        SqrtBox[
         RowBox[{
          RowBox[{"VTOTAL", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "/", "3"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Im", "[", 
            RowBox[{"\[CurlyPhi]1", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "\[NotEqual]", 
           "0"}], "||", 
          RowBox[{
           RowBox[{"Im", "[", 
            RowBox[{"\[CurlyPhi]2", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "\[NotEqual]", 
           "0"}]}], ",", 
         RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CurlyPhi]1", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], ">", "\[CurlyPhi]max"}], "||", 
          RowBox[{
           RowBox[{"\[CurlyPhi]2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], ">", "\[CurlyPhi]max"}], "||", 
          RowBox[{
           RowBox[{"\[CurlyPhi]1", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "<", "0"}], "||", 
          RowBox[{
           RowBox[{"\[CurlyPhi]2", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "<", "0"}]}], ",", 
         RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6327526607304463`*^9, 3.6327526897034874`*^9}, {
   3.632752752921576*^9, 3.6327527581515837`*^9}, {3.6327528311626863`*^9, 
   3.6327528321326876`*^9}, {3.632753056423003*^9, 3.632753058233006*^9}, {
   3.6327530944770565`*^9, 3.632753140063121*^9}, {3.632753201511208*^9, 
   3.632753359908431*^9}, {3.632753416764511*^9, 3.6327534283155274`*^9}, {
   3.632753475861594*^9, 3.6327535092056417`*^9}, {3.632753556461708*^9, 
   3.6327535822337446`*^9}, {3.6327536625928574`*^9, 3.632753663512859*^9}, 
   3.632753698998909*^9, {3.632754102014477*^9, 3.6327541358985243`*^9}, {
   3.6327542325206604`*^9, 3.6327542370706663`*^9}, {3.632754445846961*^9, 
   3.6327544492369657`*^9}, {3.6327545210850673`*^9, 3.632754648931247*^9}, {
   3.6327547001473193`*^9, 3.632754927337639*^9}, 3.6327549623216877`*^9, {
   3.6327549969167366`*^9, 3.632755001307743*^9}, {3.632755066334834*^9, 
   3.6327552882321463`*^9}, {3.6327554855524244`*^9, 
   3.6327555048354516`*^9}, {3.632755901874011*^9, 3.632755905724016*^9}, {
   3.632755938077062*^9, 3.6327559987341475`*^9}, {3.632756085366269*^9, 
   3.632756394437704*^9}, {3.632757003938635*^9, 3.632757006208638*^9}, {
   3.6327571504498415`*^9, 3.6327572801600246`*^9}, {3.6327574031791973`*^9, 
   3.6327574070392027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "draw", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CurlyPhi]1f", "=", 
     RowBox[{"Interpolation", "[", "\[CurlyPhi]1", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[CurlyPhi]2f", "=", 
     RowBox[{"Interpolation", "[", "\[CurlyPhi]2", "]"}]}], ";"}], "\n", 
   RowBox[{"plot1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[CurlyPhi]1f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "i"}], "}"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"plot2", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[CurlyPhi]2f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "i"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6327565577660065`*^9, 3.6327565675470204`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
ZNXmujeQ/wAHmflY
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.632756570558025*^9, {3.632756614232086*^9, 3.632756643534127*^9}, 
   3.6327566747491713`*^9, 3.632756772220309*^9, 3.632756939180544*^9, 
   3.632757013199648*^9, {3.6327570463826942`*^9, 3.6327570719067307`*^9}, 
   3.6327571198947983`*^9, {3.632757222339943*^9, 3.6327572510249834`*^9}, {
   3.6327573067940617`*^9, 3.6327573477891197`*^9}, 3.632757381635167*^9, 
   3.6327574131202116`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
z/5QouyoiM7epJmqMOsP6r+vrGA8G6O20VMX/eFSru6/+5yoD9OR2Wv+cCzy
2nn0oap3C7T1JKjy0rqAvjrpULvKSIJqndeX0R+4W/blMpMgZ0C4Ci3gILNL
mZUEnGqhl9BuiblvnmwlwaNgrX/lnWvZkB/ASQLnsx+D0WbjdA62PCSoEGOU
R6/8/btBbScJPrww6sP81vH+buQXJoHSoVExdJDWz1CGXSRgETg1jvOziMeM
xLQkCRjdWY/j+HwZ+Wm8X5YEpMNbOXD8mte9tixTJYFpT68RjvfVvpdryZok
8Lhzexbnh9uzA7fDdEkw+pHagvNHMHtvkBeQ4Jv863acX0QVnggbmZBgTkUl
A/3KtnNYyoIEusYhaejzwfdTt9qQoObw+5toi7NNxn/sSSA5/WUJvVZ558+E
MwkyG4fIWH59183rXe4kGKRbeYve//FqQK03CZ4N3TyC8YyKXXpxnEqC5+uK
2nC+yjAuTty9mwRTUj8CMX5LSr6efRAJRoy3c+D6cqc4vVIgnAS+z/ZE4fwV
0nLWn/EwCRZi9kpj/XeNJ3B+O0qCiKLhEfTY3xNPBmNJMOHIewLz9R/vsRPN
J0nw8UQpH+bTSitK43ICCTZdFKpEr/MIn0lJJgHTUrMUjo+7kSFlh9JIoFYU
fwF9IGuvp08GCd4VxS6jxetobCbZJAhkqbfC9hrv838ok08Ctr+q8ejMWa/o
7UUkUD6yoRxtze6m9Pci0T9Mja+h6RUcP769TIJQG8dcdIOtTWF3JZFP1pxA
9MFgc+ebVwmblu1AS5w12pR/g+if1QxV+PzXlXqtJ26T4PNfS350VpdmxN4G
Egj9WLcf62PzUUXGsZkEZ4wa87H+6xkVJjXvE+1T1p2A+bknJp0j9JAEN2Ie
s2E+Q4132TI9JoHM3ZAYzP+bOL6G4V6iPxxw+bfeZBdzHWgdIIHAnz2+uD7Z
tmzdVT5CAurqk0JczxjGt4ymjRH9N2H3e1wvG/9uPB85QYLmr4tGeP8cxrve
3O89CSTuSTLgfa+U1uqy6SeiPzIrDOP9c07k/B7OHySgb3p4Fe+P7bK+C6zM
EfUjvbyG98sb6r4MvP9NArqt3U1bCTf1TSU//UuCuBDPIXbC4bMTULdGgjI+
yyU2XK/Yx35dWE8G2SNJA6yEJ+WHa05tJEPpvOUdFsK5tn2UoM1kePTKunYL
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
f/Q/fkVyKA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 14.9982},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.632756570558025*^9, {3.632756614232086*^9, 3.632756643534127*^9}, 
   3.6327566747491713`*^9, 3.632756772220309*^9, 3.632756939180544*^9, 
   3.632757013199648*^9, {3.6327570463826942`*^9, 3.6327570719067307`*^9}, 
   3.6327571198947983`*^9, {3.632757222339943*^9, 3.6327572510249834`*^9}, {
   3.6327573067940617`*^9, 3.6327573477891197`*^9}, 3.632757381635167*^9, 
   3.6327574131602116`*^9}]
}, Open  ]]
},
WindowSize->{706, 487},
WindowMargins->{{106, Automatic}, {Automatic, 57}},
FrontEndVersion->"9.0 for Microsoft Windows (32-bit) (2013\:5e742\:670813\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 12758, 306, 1512, "Input"],
Cell[13318, 328, 3400, 90, 336, "Input"],
Cell[16721, 420, 17398, 481, 1063, "Input"],
Cell[CellGroupData[{
Cell[34144, 905, 955, 25, 112, "Input"],
Cell[35102, 932, 2978, 55, 242, "Output"],
Cell[38083, 989, 53427, 882, 231, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
